{"version":3,"file":"main.js","mappings":"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","sources":["./frontend/app/app.component.ts","./frontend/app/app.component.html","./frontend/app/app.module.ts","./frontend/environments/environment.ts","./frontend/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport MyAlgoConnect from '@randlabs/myalgo-connect';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  animations: [\n    trigger('rotatedState', [\n      state('start', style({ transform: 'rotateX(0)' })),\n      state('head', style({ transform: 'rotateX(2160deg)' })),\n      state('tail', style({ transform: 'rotateX(1980deg)' })),\n      transition('start => head', animate('8000ms ease-out')),\n      transition('start => tail', animate('3000ms ease-out')),\n      transition('head => tail', animate('3000ms ease-out')),\n      transition('tail => head', animate('3000ms ease-out'))\n    ])\n  ]\n})\nexport class AppComponent {\n  private myAlgoConnect = new MyAlgoConnect();\n\n  account = null;\n  error = null;\n  disableBtns = false;\n  coinState = 'start';\n  txId = null;\n  messages = [];\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  async connectOrDisconnect() {\n    this.error = null;\n    try {\n      if (this.account) {\n        this.account = null;\n      } else {\n        let accounts = await this.myAlgoConnect.connect({\n          shouldSelectOneAccount: true,\n          openManager: false\n        });\n\n        console.log(accounts);\n        this.account = accounts[0];\n      }\n    } catch (err) {\n      this.error = err;\n    }\n  }\n\n  async flip(choice: string) {\n\n  }\n\n  handleError(error: HttpErrorResponse) {\n    let errorMessage = 'Unknown error!';\n    if (error.error instanceof ErrorEvent) {\n      // Client-side errors\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      // Server-side errors\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(() => error);\n  }\n\n  callTest() {\n    this.test().subscribe({\n      next: (result: any) => {\n        console.log(result);\n      },\n      error: (err) => { }\n    });\n  }\n\n  test() {\n    return this.http.get<any>('/api/test')\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n}\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Algorand game - Flip A Coin</title>\r\n</head>\r\n\r\n<body>\r\n  \r\n    <div class=\"container\">\r\n        <div *ngIf=\"error\">\r\n            {{ error }}\r\n        </div>\r\n        <div class=\"row subcontainer\">\r\n            <div class=\"col s6 truncate\">\r\n                <h6>Addr: {{ (account !== null) ? (account.address) : \"None\" }}</h6>\r\n            </div>\r\n            <div class=\"col s6 right-align\">\r\n                <a class=\"waves-effect waves-light btn indigo darken-4\" (click)=\"connectOrDisconnect()\">\r\n                    {{ (account !== null) ? \"Disconnect\" : \"Connect\" }}\r\n                </a>\r\n            </div>\r\n        </div>\r\n        <div class=\"row subcontainer\">\r\n            <div class=\"col m6 s12\">\r\n                <div class=\"row\">\r\n                    <div class=\"coin\" [@rotatedState]='coinState'>\r\n                        <div class=\"heads\">\r\n                            <img src=\"assets/head.png\">\r\n                        </div>\r\n                        <div class=\"tails\">\r\n                            <img src=\"assets/tail.png\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row center\">\r\n                    <div class=\"col s6\">\r\n                        <a class=\"waves-effect waves-light btn indigo darken-4\" [ngClass]=\"{'disabled': disableBtns}\"\r\n                            (click)=\"flip('head')\">\r\n                            Head\r\n                        </a>\r\n                    </div>\r\n                    <div class=\"col s6\">\r\n                        <a class=\"waves-effect waves-light btn indigo darken-4\" [ngClass]=\"{'disabled': disableBtns}\"\r\n                            (click)=\"flip('tail')\">\r\n                            Tail\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div id=\"info\" class=\"col m6 s12\">\r\n                <div *ngFor=\"let msg of messages\" class=\"truncate\">\r\n                    <div *ngIf=\"msg.info != 'TxId'\">\r\n                        <strong>{{ msg.info }}</strong> {{ msg.value }}\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"txId\">\r\n                    <a href=\"https://testnet.algoexplorer.io/tx/{{txId}}\" target=\"_blank\">View on Algo Explorer</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</body>\r\n\r\n</html>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}