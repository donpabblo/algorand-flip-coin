{"version":3,"file":"main.js","mappings":"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","sources":["./frontend/app/app.component.ts","./frontend/app/app.component.html","./frontend/app/app.module.ts","./frontend/app/services.service.ts","./frontend/environments/environment.ts","./frontend/main.ts","ignored|C:\\Users\\servill7\\git\\Personal\\medium\\algorand-flip-coin\\node_modules\\algosdk\\dist\\browser|crypto"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport MyAlgoConnect from '@randlabs/myalgo-connect';\nimport algosdk, { Algodv2 } from 'algosdk';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\nimport { environment } from './../environments/environment';\nimport { ServicesService } from './services.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  animations: [\n    trigger('rotatedState', [\n      state('start', style({ transform: 'rotateX(0)' })),\n      state('head', style({ transform: 'rotateX(2160deg)' })),\n      state('tail', style({ transform: 'rotateX(1980deg)' })),\n      transition('start => head', animate('8000ms ease-out')),\n      transition('start => tail', animate('3000ms ease-out')),\n      transition('head => tail', animate('3000ms ease-out')),\n      transition('tail => head', animate('3000ms ease-out'))\n    ])\n  ]\n})\nexport class AppComponent {\n  private myAlgoConnect = new MyAlgoConnect();\n  private algodClient: Algodv2;\n  private choice = null;\n\n  account = null;\n  error = null;\n  disableBtns = false;\n  coinState = 'start';\n  txId = null;\n  messages = [];\n\n  constructor(\n    private services: ServicesService,\n  ) {\n    this.algodClient = new algosdk.Algodv2(\n      {\n        'X-API-Key': environment.algodClientToken\n      },\n      environment.algodClientUrl,\n      environment.algodClientPort\n    );\n  }\n\n  async connectOrDisconnect() {\n    this.error = null;\n    try {\n      if (this.account) {\n        this.account = null;\n      } else {\n        let accounts = await this.myAlgoConnect.connect(environment.algoConnectSettings);\n        console.log(accounts);\n        this.account = accounts[0];\n      }\n    } catch (err) {\n      this.error = err;\n    }\n  }\n\n  async flip(choice: string) {\n    this.error = null;\n    this.txId = null;\n    this.messages = [];\n    this.disableBtns = true;\n    this.coinState = 'start';\n\n    try {\n      if (!this.account) {\n        let accounts = await this.myAlgoConnect.connect(environment.algoConnectSettings);\n        this.account = accounts[0];\n      }\n\n      let txId = await this.payGame();\n      this.choice = choice;\n      this.messages.push({ info: 'Choice', value: this.choice });\n      let accountInfo = await this.algodClient.accountInformation(this.account.address).do();\n      this.messages.push({ info: 'Balance', value: accountInfo.amount });\n\n      this.coinState = 'head';\n\n      this.services.flipCoin(choice, txId).subscribe({\n        next: (result: any) => {\n          this.messages = this.messages.concat(result.messages);\n          this.disableBtns = false;\n          this.coinState = result.result;\n          if (this.coinState == this.choice) {\n            this.messages.push({ info: \"You Win 0.2 Algo!\", value: \"\" });\n            this.txId = result.txId;\n          } else {\n            this.messages.push({ info: \"Bla bla... You Loose!\", value: \"\" });\n          }\n        },\n        error: (err) => {\n          this.error = err;\n        }\n      })\n    } catch (err) {\n      this.error = err;\n    }\n\n  }\n\n  private async payGame() {\n    try {\n      const enc = new TextEncoder();\n      let note = enc.encode(\"Flip Coin Game\");\n      const params = await this.algodClient.getTransactionParams().do();\n      const txn = algosdk.makePaymentTxnWithSuggestedParamsFromObject({\n        suggestedParams: {\n          ...params,\n        },\n        from: this.account.address,\n        to: environment.recipientAddress,\n        amount: 100000, // 0.1 Algo\n        note: note\n      });\n      const signedTxn = await this.myAlgoConnect.signTransaction(txn.toByte());\n      const response = await this.algodClient.sendRawTransaction(signedTxn.blob).do();\n      console.log(response);\n      this.messages.push({ info: 'Payed', value: '0.1 Algo' });\n      return response.txId;\n    } catch (err) {\n      throw (err);\n    }\n  }\n\n}\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Algorand game - Flip A Coin</title>\r\n</head>\r\n\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <div *ngIf=\"error\">\r\n            {{ error }}\r\n        </div>\r\n        <div class=\"row subcontainer\">\r\n            <div class=\"col s6 truncate\">\r\n                <h6>Addr: {{ (account !== null) ? (account.address) : \"None\" }}</h6>\r\n            </div>\r\n            <div class=\"col s6 right-align\">\r\n                <a class=\"waves-effect waves-light btn indigo darken-4\" (click)=\"connectOrDisconnect()\">\r\n                    {{ (account !== null) ? \"Disconnect\" : \"Connect\" }}\r\n                </a>\r\n            </div>\r\n        </div>\r\n        <div class=\"row subcontainer\">\r\n            <div class=\"col m6 s12\">\r\n                <div class=\"row\">\r\n                    <div class=\"coin\" [@rotatedState]='coinState'>\r\n                        <div class=\"heads\">\r\n                            <img src=\"assets/head.png\">\r\n                        </div>\r\n                        <div class=\"tails\">\r\n                            <img src=\"assets/tail.png\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row center\">\r\n                    <div class=\"col s6\">\r\n                        <a class=\"waves-effect waves-light btn indigo darken-4\" [ngClass]=\"{'disabled': disableBtns}\"\r\n                            (click)=\"flip('head')\">\r\n                            Head\r\n                        </a>\r\n                    </div>\r\n                    <div class=\"col s6\">\r\n                        <a class=\"waves-effect waves-light btn indigo darken-4\" [ngClass]=\"{'disabled': disableBtns}\"\r\n                            (click)=\"flip('tail')\">\r\n                            Tail\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div id=\"info\" class=\"col m6 s12\">\r\n                <div *ngFor=\"let msg of messages\" class=\"truncate\">\r\n                    <strong>{{ msg.info }}</strong> {{ msg.value }}\r\n                </div>\r\n                <div *ngIf=\"txId\">\r\n                    <a href=\"https://testnet.algoexplorer.io/tx/{{txId}}\" target=\"_blank\">View on Algo Explorer</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</body>\r\n\r\n</html>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicesService {\n  apiPrefix = 'api';\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  handleError(error: HttpErrorResponse) {\n    let errorMessage = 'Unknown error!';\n    if (error.error instanceof ErrorEvent) {\n      // Client-side errors\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      // Server-side errors\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(() => error);\n  }\n\n  flipCoin(choice: string, txId: string): Observable<any> {\n    return this.http.post<any>('/' + this.apiPrefix + '/flip', { choice: choice, txId: txId })\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  algodClientUrl: \"https://testnet-algorand.api.purestake.io/ps2\",\n  algodClientPort: \"\",\n  algodClientToken: \"QWvOEenBjg1mkIsC9dPNZ9q9AsIPTtKXalswRv8u\",\n  recipientAddress: \"FVQID2AVLW7NRK6P3FLT27356TMQMGS53ONA3RJ25WOBUKRUJXEO2HOGCE\",\n  algoConnectSettings: {\n    shouldSelectOneAccount: true,\n    openManager: false\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"names":[],"sourceRoot":"webpack:///"}